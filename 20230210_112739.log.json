{"env_info": "sys.platform: linux\nPython: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.1, V11.1.105\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.8.2+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.2+cu111\nOpenCV: 4.5.3\nMMCV: 1.5.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMDetection: 2.28.1+", "config": "model = dict(\n    type='MaskRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint='open-mmlab://detectron2/resnet50_caffe')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=1,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n        mask_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        mask_head=dict(\n            type='FCNMaskHead',\n            num_convs=4,\n            in_channels=256,\n            conv_out_channels=256,\n            num_classes=1,\n            loss_mask=dict(\n                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            mask_size=28,\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100,\n            mask_thr_binary=0.5)))\ndataset_type = 'COCODataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='LoadAnnotations',\n        with_bbox=True,\n        with_mask=True,\n        poly2mask=False),\n    dict(\n        type='Resize',\n        img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                   (1333, 768), (1333, 800)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='/input0/train/train.json',\n        img_prefix='/input0/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='LoadAnnotations',\n                with_bbox=True,\n                with_mask=True,\n                poly2mask=False),\n            dict(\n                type='Resize',\n                img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                           (1333, 768), (1333, 800)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n        ],\n        classes=('balloon', )),\n    val=dict(\n        type='CocoDataset',\n        ann_file='/input0/val/val.json',\n        img_prefix='/input0/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('balloon', )),\n    test=dict(\n        type='CocoDataset',\n        ann_file='/input0/val/val.json',\n        img_prefix='/input0/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('balloon', )))\nevaluation = dict(metric='bbox', interval=1, save_best='auto')\noptimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=100)\ncheckpoint_config = dict(interval=10)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'mask_rcnn_r50_caffe_fpn_mstrain-poly_3x_coco_bbox_mAP-0.408__segm_mAP-0.37_20200504_163245-42aa3d00.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=False, base_batch_size=16)\nclasses = ('balloon', )\nwork_dir = './work_dirs/balloon'\nauto_resume = False\ngpu_ids = range(0, 1)\n", "seed": 171834224, "exp_name": "balloon.py", "hook_msgs": {}}
{"mode": "val", "epoch": 1, "iter": 13, "lr": 6e-05, "bbox_mAP": 0.0304, "bbox_mAP_50": 0.0586, "bbox_mAP_75": 0.023, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0078, "bbox_mAP_l": 0.0625, "bbox_mAP_copypaste": "0.0304 0.0586 0.0230 0.0000 0.0078 0.0625"}
{"mode": "val", "epoch": 2, "iter": 13, "lr": 0.00012, "bbox_mAP": 0.2847, "bbox_mAP_50": 0.3689, "bbox_mAP_75": 0.3157, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.1443, "bbox_mAP_l": 0.3526, "bbox_mAP_copypaste": "0.2847 0.3689 0.3157 0.0000 0.1443 0.3526"}
{"mode": "val", "epoch": 3, "iter": 13, "lr": 0.00018, "bbox_mAP": 0.6628, "bbox_mAP_50": 0.8133, "bbox_mAP_75": 0.7621, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.5557, "bbox_mAP_l": 0.7447, "bbox_mAP_copypaste": "0.6628 0.8133 0.7621 0.0000 0.5557 0.7447"}
{"mode": "val", "epoch": 4, "iter": 13, "lr": 0.00025, "bbox_mAP": 0.6814, "bbox_mAP_50": 0.8518, "bbox_mAP_75": 0.8254, "bbox_mAP_s": 0.0048, "bbox_mAP_m": 0.6157, "bbox_mAP_l": 0.7447, "bbox_mAP_copypaste": "0.6814 0.8518 0.8254 0.0048 0.6157 0.7447"}
{"mode": "val", "epoch": 5, "iter": 13, "lr": 0.00031, "bbox_mAP": 0.7187, "bbox_mAP_50": 0.876, "bbox_mAP_75": 0.8237, "bbox_mAP_s": 0.01, "bbox_mAP_m": 0.639, "bbox_mAP_l": 0.7836, "bbox_mAP_copypaste": "0.7187 0.8760 0.8237 0.0100 0.6390 0.7836"}
{"mode": "val", "epoch": 6, "iter": 13, "lr": 0.00037, "bbox_mAP": 0.7391, "bbox_mAP_50": 0.8818, "bbox_mAP_75": 0.845, "bbox_mAP_s": 0.0441, "bbox_mAP_m": 0.6845, "bbox_mAP_l": 0.7934, "bbox_mAP_copypaste": "0.7391 0.8818 0.8450 0.0441 0.6845 0.7934"}
{"mode": "val", "epoch": 7, "iter": 13, "lr": 0.00043, "bbox_mAP": 0.7681, "bbox_mAP_50": 0.8897, "bbox_mAP_75": 0.8285, "bbox_mAP_s": 0.0488, "bbox_mAP_m": 0.7269, "bbox_mAP_l": 0.8181, "bbox_mAP_copypaste": "0.7681 0.8897 0.8285 0.0488 0.7269 0.8181"}
{"mode": "val", "epoch": 8, "iter": 13, "lr": 0.00049, "bbox_mAP": 0.7401, "bbox_mAP_50": 0.8883, "bbox_mAP_75": 0.8432, "bbox_mAP_s": 0.055, "bbox_mAP_m": 0.6773, "bbox_mAP_l": 0.7925, "bbox_mAP_copypaste": "0.7401 0.8883 0.8432 0.0550 0.6773 0.7925"}
{"mode": "val", "epoch": 9, "iter": 13, "lr": 6e-05, "bbox_mAP": 0.7716, "bbox_mAP_50": 0.8864, "bbox_mAP_75": 0.8429, "bbox_mAP_s": 0.0151, "bbox_mAP_m": 0.7071, "bbox_mAP_l": 0.8297, "bbox_mAP_copypaste": "0.7716 0.8864 0.8429 0.0151 0.7071 0.8297"}
{"mode": "val", "epoch": 10, "iter": 13, "lr": 6e-05, "bbox_mAP": 0.7607, "bbox_mAP_50": 0.8817, "bbox_mAP_75": 0.8432, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7197, "bbox_mAP_l": 0.8153, "bbox_mAP_copypaste": "0.7607 0.8817 0.8432 0.0000 0.7197 0.8153"}
{"mode": "val", "epoch": 11, "iter": 13, "lr": 7e-05, "bbox_mAP": 0.7697, "bbox_mAP_50": 0.88, "bbox_mAP_75": 0.8425, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7229, "bbox_mAP_l": 0.8262, "bbox_mAP_copypaste": "0.7697 0.8800 0.8425 0.0000 0.7229 0.8262"}
{"mode": "val", "epoch": 12, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.772, "bbox_mAP_50": 0.8805, "bbox_mAP_75": 0.843, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7229, "bbox_mAP_l": 0.8304, "bbox_mAP_copypaste": "0.7720 0.8805 0.8430 0.0000 0.7229 0.8304"}
{"mode": "val", "epoch": 13, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7645, "bbox_mAP_50": 0.8808, "bbox_mAP_75": 0.843, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8205, "bbox_mAP_copypaste": "0.7645 0.8808 0.8430 0.0000 0.7276 0.8205"}
{"mode": "val", "epoch": 14, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.764, "bbox_mAP_50": 0.8803, "bbox_mAP_75": 0.8425, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8196, "bbox_mAP_copypaste": "0.7640 0.8803 0.8425 0.0000 0.7276 0.8196"}
{"mode": "val", "epoch": 15, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.764, "bbox_mAP_50": 0.8803, "bbox_mAP_75": 0.8425, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8196, "bbox_mAP_copypaste": "0.7640 0.8803 0.8425 0.0000 0.7276 0.8196"}
{"mode": "val", "epoch": 16, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7656, "bbox_mAP_50": 0.8803, "bbox_mAP_75": 0.8425, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8219, "bbox_mAP_copypaste": "0.7656 0.8803 0.8425 0.0000 0.7276 0.8219"}
{"mode": "val", "epoch": 17, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7657, "bbox_mAP_50": 0.8808, "bbox_mAP_75": 0.843, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8221, "bbox_mAP_copypaste": "0.7657 0.8808 0.8430 0.0000 0.7276 0.8221"}
{"mode": "val", "epoch": 18, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7701, "bbox_mAP_50": 0.8808, "bbox_mAP_75": 0.843, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8277, "bbox_mAP_copypaste": "0.7701 0.8808 0.8430 0.0000 0.7276 0.8277"}
{"mode": "val", "epoch": 19, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7701, "bbox_mAP_50": 0.8808, "bbox_mAP_75": 0.843, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8277, "bbox_mAP_copypaste": "0.7701 0.8808 0.8430 0.0000 0.7276 0.8277"}
{"mode": "val", "epoch": 20, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7701, "bbox_mAP_50": 0.8808, "bbox_mAP_75": 0.843, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8277, "bbox_mAP_copypaste": "0.7701 0.8808 0.8430 0.0000 0.7276 0.8277"}
{"mode": "val", "epoch": 21, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7708, "bbox_mAP_50": 0.8813, "bbox_mAP_75": 0.8435, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8285, "bbox_mAP_copypaste": "0.7708 0.8813 0.8435 0.0000 0.7276 0.8285"}
{"mode": "val", "epoch": 22, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7701, "bbox_mAP_50": 0.8808, "bbox_mAP_75": 0.843, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8277, "bbox_mAP_copypaste": "0.7701 0.8808 0.8430 0.0000 0.7276 0.8277"}
{"mode": "val", "epoch": 23, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7746, "bbox_mAP_50": 0.8817, "bbox_mAP_75": 0.844, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8338, "bbox_mAP_copypaste": "0.7746 0.8817 0.8440 0.0000 0.7276 0.8338"}
{"mode": "val", "epoch": 24, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7708, "bbox_mAP_50": 0.8813, "bbox_mAP_75": 0.8435, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8285, "bbox_mAP_copypaste": "0.7708 0.8813 0.8435 0.0000 0.7276 0.8285"}
{"mode": "val", "epoch": 25, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7732, "bbox_mAP_50": 0.8817, "bbox_mAP_75": 0.844, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7197, "bbox_mAP_l": 0.8332, "bbox_mAP_copypaste": "0.7732 0.8817 0.8440 0.0000 0.7197 0.8332"}
{"mode": "val", "epoch": 26, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7702, "bbox_mAP_50": 0.8817, "bbox_mAP_75": 0.844, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7197, "bbox_mAP_l": 0.8293, "bbox_mAP_copypaste": "0.7702 0.8817 0.8440 0.0000 0.7197 0.8293"}
{"mode": "val", "epoch": 27, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7746, "bbox_mAP_50": 0.8817, "bbox_mAP_75": 0.844, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8338, "bbox_mAP_copypaste": "0.7746 0.8817 0.8440 0.0000 0.7276 0.8338"}
{"mode": "val", "epoch": 28, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7713, "bbox_mAP_50": 0.8817, "bbox_mAP_75": 0.844, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8293, "bbox_mAP_copypaste": "0.7713 0.8817 0.8440 0.0000 0.7276 0.8293"}
{"mode": "val", "epoch": 29, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7742, "bbox_mAP_50": 0.8813, "bbox_mAP_75": 0.8446, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8327, "bbox_mAP_copypaste": "0.7742 0.8813 0.8446 0.0000 0.7276 0.8327"}
{"mode": "val", "epoch": 30, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7709, "bbox_mAP_50": 0.8813, "bbox_mAP_75": 0.8446, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7276, "bbox_mAP_l": 0.8283, "bbox_mAP_copypaste": "0.7709 0.8813 0.8446 0.0000 0.7276 0.8283"}
{"mode": "val", "epoch": 31, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7645, "bbox_mAP_50": 0.8783, "bbox_mAP_75": 0.8399, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8224, "bbox_mAP_copypaste": "0.7645 0.8783 0.8399 0.0000 0.7187 0.8224"}
{"mode": "val", "epoch": 32, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7686, "bbox_mAP_50": 0.8788, "bbox_mAP_75": 0.8403, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8275, "bbox_mAP_copypaste": "0.7686 0.8788 0.8403 0.0000 0.7187 0.8275"}
{"mode": "val", "epoch": 33, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7722, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8325, "bbox_mAP_copypaste": "0.7722 0.8792 0.8408 0.0000 0.7187 0.8325"}
{"mode": "val", "epoch": 34, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.771, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8307, "bbox_mAP_copypaste": "0.7710 0.8792 0.8408 0.0000 0.7187 0.8307"}
{"mode": "val", "epoch": 35, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7727, "bbox_mAP_50": 0.8797, "bbox_mAP_75": 0.8413, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8334, "bbox_mAP_copypaste": "0.7727 0.8797 0.8413 0.0000 0.7187 0.8334"}
{"mode": "val", "epoch": 36, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7721, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8323, "bbox_mAP_copypaste": "0.7721 0.8792 0.8408 0.0000 0.7187 0.8323"}
{"mode": "val", "epoch": 37, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7726, "bbox_mAP_50": 0.8797, "bbox_mAP_75": 0.8413, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8333, "bbox_mAP_copypaste": "0.7726 0.8797 0.8413 0.0000 0.7187 0.8333"}
{"mode": "val", "epoch": 38, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7714, "bbox_mAP_50": 0.8788, "bbox_mAP_75": 0.8403, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8313, "bbox_mAP_copypaste": "0.7714 0.8788 0.8403 0.0000 0.7187 0.8313"}
{"mode": "val", "epoch": 39, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7732, "bbox_mAP_50": 0.8788, "bbox_mAP_75": 0.8403, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8337, "bbox_mAP_copypaste": "0.7732 0.8788 0.8403 0.0000 0.7187 0.8337"}
{"mode": "val", "epoch": 40, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7648, "bbox_mAP_50": 0.8788, "bbox_mAP_75": 0.8403, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8227, "bbox_mAP_copypaste": "0.7648 0.8788 0.8403 0.0000 0.7187 0.8227"}
{"mode": "val", "epoch": 41, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7714, "bbox_mAP_50": 0.8788, "bbox_mAP_75": 0.8403, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8312, "bbox_mAP_copypaste": "0.7714 0.8788 0.8403 0.0000 0.7187 0.8312"}
{"mode": "val", "epoch": 42, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7701, "bbox_mAP_50": 0.8788, "bbox_mAP_75": 0.8403, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8294, "bbox_mAP_copypaste": "0.7701 0.8788 0.8403 0.0000 0.7187 0.8294"}
{"mode": "val", "epoch": 43, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7733, "bbox_mAP_50": 0.8788, "bbox_mAP_75": 0.8403, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8338, "bbox_mAP_copypaste": "0.7733 0.8788 0.8403 0.0000 0.7187 0.8338"}
{"mode": "val", "epoch": 44, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7709, "bbox_mAP_50": 0.8788, "bbox_mAP_75": 0.8403, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8304, "bbox_mAP_copypaste": "0.7709 0.8788 0.8403 0.0000 0.7187 0.8304"}
{"mode": "val", "epoch": 45, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7731, "bbox_mAP_50": 0.8788, "bbox_mAP_75": 0.8403, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8335, "bbox_mAP_copypaste": "0.7731 0.8788 0.8403 0.0000 0.7187 0.8335"}
{"mode": "val", "epoch": 46, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7736, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8344, "bbox_mAP_copypaste": "0.7736 0.8792 0.8408 0.0000 0.7187 0.8344"}
{"mode": "val", "epoch": 47, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7736, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8344, "bbox_mAP_copypaste": "0.7736 0.8792 0.8408 0.0000 0.7187 0.8344"}
{"mode": "val", "epoch": 48, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7736, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8344, "bbox_mAP_copypaste": "0.7736 0.8792 0.8408 0.0000 0.7187 0.8344"}
{"mode": "val", "epoch": 49, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7736, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8344, "bbox_mAP_copypaste": "0.7736 0.8792 0.8408 0.0000 0.7187 0.8344"}
{"mode": "val", "epoch": 50, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7716, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8316, "bbox_mAP_copypaste": "0.7716 0.8792 0.8408 0.0000 0.7187 0.8316"}
{"mode": "val", "epoch": 51, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7736, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8344, "bbox_mAP_copypaste": "0.7736 0.8792 0.8408 0.0000 0.7187 0.8344"}
{"mode": "val", "epoch": 52, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7735, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8342, "bbox_mAP_copypaste": "0.7735 0.8792 0.8408 0.0000 0.7187 0.8342"}
{"mode": "val", "epoch": 53, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7694, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8286, "bbox_mAP_copypaste": "0.7694 0.8792 0.8408 0.0000 0.7187 0.8286"}
{"mode": "val", "epoch": 54, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7715, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8315, "bbox_mAP_copypaste": "0.7715 0.8792 0.8408 0.0000 0.7187 0.8315"}
{"mode": "val", "epoch": 55, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7717, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8316, "bbox_mAP_copypaste": "0.7717 0.8792 0.8408 0.0000 0.7187 0.8316"}
{"mode": "val", "epoch": 56, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7718, "bbox_mAP_50": 0.8792, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7187, "bbox_mAP_l": 0.8318, "bbox_mAP_copypaste": "0.7718 0.8792 0.8408 0.0000 0.7187 0.8318"}
{"mode": "val", "epoch": 57, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.77, "bbox_mAP_50": 0.8795, "bbox_mAP_75": 0.8413, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8297, "bbox_mAP_copypaste": "0.7700 0.8795 0.8413 0.0000 0.7102 0.8297"}
{"mode": "val", "epoch": 58, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7724, "bbox_mAP_50": 0.8795, "bbox_mAP_75": 0.8413, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8329, "bbox_mAP_copypaste": "0.7724 0.8795 0.8413 0.0000 0.7102 0.8329"}
{"mode": "val", "epoch": 59, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7734, "bbox_mAP_50": 0.879, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8341, "bbox_mAP_copypaste": "0.7734 0.8790 0.8408 0.0000 0.7102 0.8341"}
{"mode": "val", "epoch": 60, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7722, "bbox_mAP_50": 0.8795, "bbox_mAP_75": 0.8413, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8327, "bbox_mAP_copypaste": "0.7722 0.8795 0.8413 0.0000 0.7102 0.8327"}
{"mode": "val", "epoch": 61, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7722, "bbox_mAP_50": 0.8795, "bbox_mAP_75": 0.8413, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8327, "bbox_mAP_copypaste": "0.7722 0.8795 0.8413 0.0000 0.7102 0.8327"}
{"mode": "val", "epoch": 62, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7729, "bbox_mAP_50": 0.8799, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8338, "bbox_mAP_copypaste": "0.7729 0.8799 0.8417 0.0000 0.7102 0.8338"}
{"mode": "val", "epoch": 63, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7733, "bbox_mAP_50": 0.879, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8339, "bbox_mAP_copypaste": "0.7733 0.8790 0.8408 0.0000 0.7102 0.8339"}
{"mode": "val", "epoch": 64, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.768, "bbox_mAP_50": 0.879, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8269, "bbox_mAP_copypaste": "0.7680 0.8790 0.8408 0.0000 0.7102 0.8269"}
{"mode": "val", "epoch": 65, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7721, "bbox_mAP_50": 0.8795, "bbox_mAP_75": 0.8413, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8325, "bbox_mAP_copypaste": "0.7721 0.8795 0.8413 0.0000 0.7102 0.8325"}
{"mode": "val", "epoch": 66, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7753, "bbox_mAP_50": 0.8794, "bbox_mAP_75": 0.8412, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8366, "bbox_mAP_copypaste": "0.7753 0.8794 0.8412 0.0000 0.7102 0.8366"}
{"mode": "val", "epoch": 67, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7752, "bbox_mAP_50": 0.8794, "bbox_mAP_75": 0.8412, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8364, "bbox_mAP_copypaste": "0.7752 0.8794 0.8412 0.0000 0.7102 0.8364"}
{"mode": "val", "epoch": 68, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7757, "bbox_mAP_50": 0.8799, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8374, "bbox_mAP_copypaste": "0.7757 0.8799 0.8417 0.0000 0.7102 0.8374"}
{"mode": "val", "epoch": 69, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7689, "bbox_mAP_50": 0.8799, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8294, "bbox_mAP_copypaste": "0.7689 0.8799 0.8417 0.0000 0.7102 0.8294"}
{"mode": "val", "epoch": 70, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7681, "bbox_mAP_50": 0.879, "bbox_mAP_75": 0.8408, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8277, "bbox_mAP_copypaste": "0.7681 0.8790 0.8408 0.0000 0.7102 0.8277"}
{"mode": "val", "epoch": 71, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7729, "bbox_mAP_50": 0.8799, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8345, "bbox_mAP_copypaste": "0.7729 0.8799 0.8417 0.0000 0.7102 0.8345"}
{"mode": "val", "epoch": 72, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7689, "bbox_mAP_50": 0.8799, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8292, "bbox_mAP_copypaste": "0.7689 0.8799 0.8417 0.0000 0.7102 0.8292"}
{"mode": "val", "epoch": 73, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.772, "bbox_mAP_50": 0.8799, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8324, "bbox_mAP_copypaste": "0.7720 0.8799 0.8417 0.0000 0.7102 0.8324"}
{"mode": "val", "epoch": 74, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7717, "bbox_mAP_50": 0.8793, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8323, "bbox_mAP_copypaste": "0.7717 0.8793 0.8417 0.0000 0.7102 0.8323"}
{"mode": "val", "epoch": 75, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7752, "bbox_mAP_50": 0.8793, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.837, "bbox_mAP_copypaste": "0.7752 0.8793 0.8417 0.0000 0.7102 0.8370"}
{"mode": "val", "epoch": 76, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7752, "bbox_mAP_50": 0.8793, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.837, "bbox_mAP_copypaste": "0.7752 0.8793 0.8417 0.0000 0.7102 0.8370"}
{"mode": "val", "epoch": 77, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7759, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8376, "bbox_mAP_copypaste": "0.7759 0.8806 0.8417 0.0000 0.7102 0.8376"}
{"mode": "val", "epoch": 78, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7755, "bbox_mAP_50": 0.8799, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.837, "bbox_mAP_copypaste": "0.7755 0.8799 0.8417 0.0000 0.7102 0.8370"}
{"mode": "val", "epoch": 79, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7758, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8375, "bbox_mAP_copypaste": "0.7758 0.8806 0.8417 0.0000 0.7102 0.8375"}
{"mode": "val", "epoch": 80, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7759, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8377, "bbox_mAP_copypaste": "0.7759 0.8806 0.8417 0.0000 0.7102 0.8377"}
{"mode": "val", "epoch": 81, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7758, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8375, "bbox_mAP_copypaste": "0.7758 0.8806 0.8417 0.0000 0.7102 0.8375"}
{"mode": "val", "epoch": 82, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7758, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8375, "bbox_mAP_copypaste": "0.7758 0.8806 0.8417 0.0000 0.7102 0.8375"}
{"mode": "val", "epoch": 83, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7758, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8375, "bbox_mAP_copypaste": "0.7758 0.8806 0.8417 0.0000 0.7102 0.8375"}
{"mode": "val", "epoch": 84, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7757, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8375, "bbox_mAP_copypaste": "0.7757 0.8806 0.8417 0.0000 0.7102 0.8375"}
{"mode": "val", "epoch": 85, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7771, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8393, "bbox_mAP_copypaste": "0.7771 0.8806 0.8417 0.0000 0.7102 0.8393"}
{"mode": "val", "epoch": 86, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.776, "bbox_mAP_50": 0.8811, "bbox_mAP_75": 0.8422, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7113, "bbox_mAP_l": 0.8376, "bbox_mAP_copypaste": "0.7760 0.8811 0.8422 0.0000 0.7113 0.8376"}
{"mode": "val", "epoch": 87, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7757, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7102, "bbox_mAP_l": 0.8375, "bbox_mAP_copypaste": "0.7757 0.8806 0.8417 0.0000 0.7102 0.8375"}
{"mode": "val", "epoch": 88, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7758, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7113, "bbox_mAP_l": 0.8375, "bbox_mAP_copypaste": "0.7758 0.8806 0.8417 0.0000 0.7113 0.8375"}
{"mode": "val", "epoch": 89, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7758, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7113, "bbox_mAP_l": 0.8375, "bbox_mAP_copypaste": "0.7758 0.8806 0.8417 0.0000 0.7113 0.8375"}
{"mode": "val", "epoch": 90, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7754, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7113, "bbox_mAP_l": 0.837, "bbox_mAP_copypaste": "0.7754 0.8806 0.8417 0.0000 0.7113 0.8370"}
{"mode": "val", "epoch": 91, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7751, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7113, "bbox_mAP_l": 0.8365, "bbox_mAP_copypaste": "0.7751 0.8806 0.8417 0.0000 0.7113 0.8365"}
{"mode": "val", "epoch": 92, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7751, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7113, "bbox_mAP_l": 0.8365, "bbox_mAP_copypaste": "0.7751 0.8806 0.8417 0.0000 0.7113 0.8365"}
{"mode": "val", "epoch": 93, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7722, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7113, "bbox_mAP_l": 0.8326, "bbox_mAP_copypaste": "0.7722 0.8806 0.8417 0.0000 0.7113 0.8326"}
{"mode": "val", "epoch": 94, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7752, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7104, "bbox_mAP_l": 0.8369, "bbox_mAP_copypaste": "0.7752 0.8806 0.8417 0.0000 0.7104 0.8369"}
{"mode": "val", "epoch": 95, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7751, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7104, "bbox_mAP_l": 0.8366, "bbox_mAP_copypaste": "0.7751 0.8806 0.8417 0.0000 0.7104 0.8366"}
{"mode": "val", "epoch": 96, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7757, "bbox_mAP_50": 0.8816, "bbox_mAP_75": 0.8425, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7104, "bbox_mAP_l": 0.8367, "bbox_mAP_copypaste": "0.7757 0.8816 0.8425 0.0000 0.7104 0.8367"}
{"mode": "val", "epoch": 97, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7752, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7113, "bbox_mAP_l": 0.8367, "bbox_mAP_copypaste": "0.7752 0.8806 0.8417 0.0000 0.7113 0.8367"}
{"mode": "val", "epoch": 98, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7722, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7113, "bbox_mAP_l": 0.8327, "bbox_mAP_copypaste": "0.7722 0.8806 0.8417 0.0000 0.7113 0.8327"}
{"mode": "val", "epoch": 99, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7719, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7113, "bbox_mAP_l": 0.8334, "bbox_mAP_copypaste": "0.7719 0.8806 0.8417 0.0000 0.7113 0.8334"}
{"mode": "val", "epoch": 100, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7758, "bbox_mAP_50": 0.8825, "bbox_mAP_75": 0.8643, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.7113, "bbox_mAP_l": 0.8381, "bbox_mAP_copypaste": "0.7758 0.8825 0.8643 0.0000 0.7113 0.8381"}
